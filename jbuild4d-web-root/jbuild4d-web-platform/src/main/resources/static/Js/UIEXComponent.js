"use strict";Object.create||(Object.create=function(){function t(){}return function(e){if(1!=arguments.length)throw new Error("Object.create implementation only accepts one parameter.");return t.prototype=e,new t}}());var EditTableConfig={Status:"Edit",Templates:[{Title:"表名1",FieldName:"TableField",Renderer:"EditTable_TextBox",TitleCellClassName:"TitleCell",Hidden:!1,TitleCellAttrs:{}},{Title:"字段类型",FieldName:"TableField",Renderer:"EditTable_TextBox",Hidden:!1},{Title:"备注",FieldName:"TableField",Renderer:"EditTable_TextBox",Hidden:!1}],RowIdCreater:function(){},TableClass:"EditTable",RendererTo:"divTreeTable",TableId:"EditTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}},EditTableData={},EditTable={_$Prop_TableElem:null,_$Prop_RendererToElem:null,_Prop_ConfigManager:null,_Prop_JsonData:new Object,_$Prop_EditingRowElem:null,Initialization:function(e){this._Prop_ConfigManager=Object.create(EditTableConfigManager),this._Prop_ConfigManager.InitializationConfig(e);var t=this._Prop_ConfigManager.GetConfig();this._$Prop_RendererToElem=$("#"+t.RendererTo),this._$Prop_TableElem=this.CreateTable(),this._$Prop_TableElem.append(this.CreateTableTitleRow()),this._$Prop_RendererToElem.append(this._$Prop_TableElem)},LoadJsonData:function(e){if(null!=e&&null!=e){for(var t=0;t<e.length;t++){var a=e[t],l=this.AddEditingRowByTemplate(e,a);this._Prop_JsonData[l]=a}this.CompletedEditingRow()}else alert("Json Data Object Error")},CreateTable:function(){var e=this._Prop_ConfigManager.GetConfig(),t=$("<table />");return t.addClass(e.TableClass),t.attr("Id",e.TableId),t.attr(e.TableAttrs),t},CreateTableTitleRow:function(){for(var e=this._Prop_ConfigManager.GetConfig(),t=$("<tr isHeader='true' />"),a=0;a<e.Templates.length;a++){var l=e.Templates[a],r=l.Title,i=$("<th>"+r+"</th>");l.TitleCellClassName&&i.addClass(l.TitleCellClassName),l.TitleCellAttrs&&i.attr(l.TitleCellAttrs),void 0!==l.Hidden&&1==l.Hidden&&i.hide(),t.append(i)}var n=$("<thead></thead>");return n.append(t),n},AddEmptyEditingRowByTemplate:function(e){var t=this.AddEditingRowByTemplate(null);this._Prop_JsonData[t]=null},AddEditingRowByTemplate:function AddEditingRowByTemplate(jsonDatas,jsonDataSingle){if(this.CompletedEditingRow()){var rowId=StringUtility.Guid(),$rowElem=$("<tr />");if($rowElem.attr("id",rowId),this._$Prop_EditingRowElem=$rowElem,null!=jsonDataSingle&&null!=jsonDataSingle&&0==jsonDataSingle.editEable);else{var event_data={host:this};$rowElem.bind("click",event_data,function(event){var rowStatus=$rowElem.attr("status");if(void 0!==rowStatus&&"disabled"==rowStatus)return!1;var _host=event.data.host;if(null==_host._$Prop_EditingRowElem||$(this).attr("id")!=_host._$Prop_EditingRowElem.attr("id")){var _C=_host._Prop_ConfigManager.GetConfig();if(void 0!==_C.RowClick&&"function"==typeof _C.RowClick)try{var result=_C.RowClick();if("undefined"!=result&&0==result)return!1}catch(e){alert("_C.RowClick() Error")}if(_host.CompletedEditingRow()){_host._$Prop_EditingRowElem=$(this),_host.SetRowIsEditStatus(_host._$Prop_EditingRowElem);var _row=$(this);_row.find("td").each(function(){var $td=$(this),renderer=$td.attr("renderer"),templateId=$td.attr("templateId"),template=_host._Prop_ConfigManager.GetTemplate(templateId),rendererObj=eval("Object.create("+renderer+")"),$htmlelem=rendererObj.Get_EditStatus_HtmlElem(_C,template,$td,_row,this._$Prop_TableElem,$td.children());void 0!==template.Hidden&&1==template.Hidden&&$td.hide(),void 0!==template.Style&&$td.css(template.Style),$td.html(""),$td.append($htmlelem)})}}})}for(var _C=this._Prop_ConfigManager.GetConfig(),i=0;i<_C.Templates.length;i++){var template=_C.Templates[i],renderer=null;try{renderer=template.Renderer;var rendererObj=eval("Object.create("+renderer+")")}catch(e){alert("实例化"+renderer+"失败!")}var $tdElem=null;$tdElem=$("<td />"),$tdElem.attr("renderer",renderer),$tdElem.attr("templateId",template.TemplateId),void 0!==template.Hidden&&1==template.Hidden&&$tdElem.hide(),void 0!==template.Width&&$tdElem.css("width",template.Width),void 0!==template.Align&&$tdElem.attr("align",template.Align);var $elem=rendererObj.Get_EditStatus_HtmlElem(_C,template,$tdElem,$rowElem,this._$Prop_TableElem,null,jsonDatas,jsonDataSingle);void 0!==template.Style&&$tdElem.css(template.Style),$tdElem.append($elem),$rowElem.append($tdElem)}return this._$Prop_TableElem.append($rowElem),void 0!==_C.AddAfterRowEvent&&"function"==typeof _C.AddAfterRowEvent&&_C.AddAfterRowEvent($rowElem),rowId}},SetRowIsEditStatus:function(e){$(e).attr("EditStatus","EditStatus")},SetRowIsCompletedStatus:function(e){$(e).attr("EditStatus","CompletedStatus")},RowIsEditStatus:function(e){return"EditStatus"==$(e).attr("EditStatus")},RowIsCompletedStatus:function(e){return"CompletedStatus"==$(e).attr("EditStatus")},CompletedEditingRow:function CompletedEditingRow(){var result=!0;if(null!=this._$Prop_EditingRowElem&&!this.RowIsCompletedStatus(this._$Prop_EditingRowElem)){var _C=this._Prop_ConfigManager.GetConfig(),_host=this;if(this.ValidateCompletedEditingRowEnable(this._$Prop_EditingRowElem)){var _row=this._$Prop_EditingRowElem;this.SetRowIsCompletedStatus(_row),_row.find("td").each(function(){var $td=$(this),renderer=$td.attr("renderer"),templateId=$td.attr("templateId"),template=_host._Prop_ConfigManager.GetTemplate(templateId),rendererObj=eval("Object.create("+renderer+")"),$htmlelem=rendererObj.Get_CompletedStatus_HtmlElem(_C,template,$td,_row,this._$Prop_TableElem,$td.children());$td.html(""),$td.append($htmlelem)}),this._$Prop_EditingRowElem=null}else result=!1}return result},ValidateCompletedEditingRowEnable:function ValidateCompletedEditingRowEnable(editRow){for(var _C=this._Prop_ConfigManager.GetConfig(),_host=this,result=!0,validateMsg="",tds=$(editRow).find("td"),i=0;i<tds.length;i++){var $td=$(tds[i]),renderer=$td.attr("renderer"),templateId=$td.attr("templateId"),template=_host._Prop_ConfigManager.GetTemplate(templateId),rendererObj=eval("Object.create("+renderer+")"),valresult=rendererObj.ValidateToCompletedEnable(_C,template,$td,editRow,this._$Prop_TableElem,$td.children());if(0==valresult.Success){result=!1,validateMsg=valresult.Msg;break}}return result||null==validateMsg||DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},validateMsg,null),result},RemoveRow:function(){null!=this._$Prop_EditingRowElem&&(this._$Prop_EditingRowElem.remove(),this._$Prop_EditingRowElem=null)},GetTableObject:function(){return this._$Prop_TableElem},GetRows:function(){if(null!=this._$Prop_TableElem)return this._$Prop_TableElem.find("tr:not(:first)")},GetEditRow:function(){return null!=this._$Prop_EditingRowElem?this._$Prop_EditingRowElem:null},GetLastRow:function(){var e=this.GetEditRow();if(null==e)return null;var t=this.GetRows(),a=t.index(e);return 0<a?$(t[a-1]):null},GetNextRow:function(){var e=this.GetEditRow();if(null==e)return null;var t=this.GetRows(),a=t.index(e);return a<t.length-1?$(t[a+1]):null},MoveUp:function(){var e=this.GetLastRow();if(null==e)return!1;if(void 0!==e.attr("status")&&"disabled"==e.attr("status"))return!1;var t=this.GetEditRow(),a=t.attr("class");return t.attr("class",e.attr("class")),e.attr("class",a),null!=t&&(e.before(t[0]),!0)},MoveDown:function(){var e=this.GetNextRow();if(null==e)return!1;if(void 0!==e.attr("state")&&"disabled"==e.attr("state"))return!1;var t=this.GetEditRow(),a=t.attr("class");return t.attr("class",e.attr("class")),e.attr("class",a),null!=t&&(e.after(t[0]),!0)},RemoveAllRow:function(){null!=this._$Prop_TableElem&&this._$Prop_TableElem.find("tr:not(:first)").each(function(){$(this).remove()})},UpdateToRow:function(a,o){var e=this._$Prop_TableElem,u=this;e.find("tr[isHeader!='true']").each(function(){var e=$(this),t=e.attr("id");if(a==t)for(var d in o)e.find("td").each(function(){var e=$(this),t=e.find("[IsSerialize='true']"),a=t.attr("BindName");if(d==a){var l=e.attr("templateId"),r=u._Prop_ConfigManager.GetTemplate(l),i="",n=o[a];if(void 0!==r.Formatter&&"function"==typeof r.Formatter&&(i=r.Formatter(n)),""==i&&(i=n),"INPUT"==t.prop("tagName"))"checkbox"==t.attr("type").toLowerCase()||t.val(i);else{try{t.text(i)}catch(e){alert("UpdateToRow $label.text(text) Error!")}t.attr("Value",n)}}})})},GetSelectRowDataByRowId:function(a){var e=this._$Prop_TableElem,l={};return e.find("tr[isHeader!='true']").each(function(){var e=$(this),t=e.attr("id");a==t&&e.find("[IsSerialize='true']").each(function(){null!=$(this).attr("Value")?l[$(this).attr("BindName")]=$(this).attr("Value"):l[$(this).attr("BindName")]=$(this).val()})}),l},GetSelectRowByRowId:function(e){return this._$Prop_TableElem.find("tr[id='"+e+"']")},GetAllRowData:function(){var e=this._$Prop_TableElem,a=new Array;return e.find("tr[isHeader!='true']").each(function(){var e=$(this),t={};e.find("[IsSerialize='true']").each(function(){t[$(this).attr("BindName")]=$(this).attr("Value"),t[$(this).attr("BindName")+"___Text"]=$(this).attr("Text")}),a.push(t)}),a},GetSerializeJson:function(){var e=new Array;return this._$Prop_TableElem.find("tr[isHeader!='true']").each(function(){var r=new Object;$(this).find("[IsSerialize='true']").each(function(){var e=$(this),t=e.attr("BindName"),a=e.attr("Value"),l=e.attr("Text");r[t]=a,r[t+"___Text"]=l}),e.push(r)}),e},GetTableElement:function(){return this._$Prop_TableElem}},EditTableConfigManager={_Prop_Config:{},InitializationConfig:function(e){this._Prop_Config=$.extend(!0,{},this._Prop_Config,e);for(var t=this._Prop_Config.Templates,a=0;a<t.length;a++){t[a].TemplateId=StringUtility.Guid()}},GetConfig:function(){return this._Prop_Config},GetTemplate:function(e){for(var t=this._Prop_Config.Templates,a=0;a<t.length;a++){var l=t[a];if(l.TemplateId==e)return l}return null}},EditTableValidate={_SQLKeyWordArray:new Array,GetSQLKeyWords:function(){return 0==this._SQLKeyWordArray.length&&(this._SQLKeyWordArray.push("insert"),this._SQLKeyWordArray.push("update"),this._SQLKeyWordArray.push("delete"),this._SQLKeyWordArray.push("select"),this._SQLKeyWordArray.push("as"),this._SQLKeyWordArray.push("from"),this._SQLKeyWordArray.push("distinct"),this._SQLKeyWordArray.push("where"),this._SQLKeyWordArray.push("order"),this._SQLKeyWordArray.push("by"),this._SQLKeyWordArray.push("asc"),this._SQLKeyWordArray.push("desc"),this._SQLKeyWordArray.push("desc"),this._SQLKeyWordArray.push("and"),this._SQLKeyWordArray.push("or"),this._SQLKeyWordArray.push("between"),this._SQLKeyWordArray.push("order by"),this._SQLKeyWordArray.push("count"),this._SQLKeyWordArray.push("group"),this._SQLKeyWordArray.push("group by"),this._SQLKeyWordArray.push("having"),this._SQLKeyWordArray.push("alias"),this._SQLKeyWordArray.push("join"),this._SQLKeyWordArray.push("left"),this._SQLKeyWordArray.push("rigth"),this._SQLKeyWordArray.push("inneer"),this._SQLKeyWordArray.push("union"),this._SQLKeyWordArray.push("sum"),this._SQLKeyWordArray.push("all"),this._SQLKeyWordArray.push("minus"),this._SQLKeyWordArray.push("alert"),this._SQLKeyWordArray.push("drop"),this._SQLKeyWordArray.push("exec"),this._SQLKeyWordArray.push("truncate")),this._SQLKeyWordArray},Validate:function(e,t){var a={Success:!0,Msg:""},l=t.Validate;if(null!=l&&null!=l){var r=l.Type;if(null!=r&&null!=r)switch(r){case"NotEmpty":""==e&&(a.Success=!1,a.Msg="【"+t.Title+"】不能为空!");break;case"LUNoOnly":0==/^[a-zA-Z][a-zA-Z0-9_]{0,}$/.test(e)&&(a.Success=!1,a.Msg="【"+t.Title+"】不能为空且只能是字母、下划线、数字并以字母开头！");break;case"SQLKeyWord":0==/^[a-zA-Z][a-zA-Z0-9_]{0,}$/.test(e)&&(a.Success=!1,a.Msg="【"+t.Title+"】不能为空且只能是字母、下划线、数字并以字母开头！");e=e.toUpperCase();for(var i=this.GetSQLKeyWords(),n=0;n<i.length;n++)if(e==i[n].toUpperCase()){a.Success=!1,a.Msg="【"+t.Title+"】请不要使用SQL关键字作为列名！";break}}}return a}},EditTableDefauleValue={GetValue:function(e){var t=e.DefaultValue;if(null!=t&&null!=t){var a=t.Type;if(null!=a&&null!=a)switch(a){case"Const":return t.Value;case"GUID":return StringUtility.Guid()}}return""}},EditTable_CheckBox={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue)o=EditTableDefauleValue.GetValue(t);null!=d&&null!=d&&(o=d[u]),null!=i&&null!=i&&(o=i.html());var s="";return(s="是"==o?$("<input type='checkbox' checked='checked' />"):$("<input type='checkbox' />")).val(o),s},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){i.val();return t.IsCNValue?"checked"==i.attr("checked")?$("<label IsSerialize='true' BindName='"+t.BindName+"' value='是'>是</label>"):$("<label IsSerialize='true' BindName='"+t.BindName+"' value='否'>否</label>"):"checked"==i.attr("checked")?$("<label IsSerialize='true' BindName='"+t.BindName+"' value='1'>是</label>"):$("<label IsSerialize='true' BindName='"+t.BindName+"' value='0'>否</label>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)}},EditTable_Formatter={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){if(t.Formatter&&"function"==typeof t.Formatter){var o=EditTable._Prop_JsonData;if(o){var u=o[l.attr("id")];if(u)return $(t.Formatter(t,a,l,r,u))}}return""},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i,n,d){if(t.Formatter&&"function"==typeof t.Formatter){var o=EditTable._Prop_JsonData;if(o){var u=o[l.attr("id")];if(u)return $(t.Formatter(t,a,l,r,u))}}return""},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)}},EditTable_Label={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o,u="",s=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue&&(u=EditTableDefauleValue.GetValue(t)),null!=d&&null!=d&&(u=d[s]),null!=i&&null!=i&&(u=void 0===t.Formater?i.html():i.attr("Value")),void 0===t.Formater)o=$("<label IsSerialize='true' Text='"+_+"' BindName='"+t.BindName+"' Value='"+u+"'>"+u+"</label>");else{var _=t.Formater(u);o=$("<label IsSerialize='true' Text="+_+" BindName='"+t.BindName+"' Value="+u+">"+_+"</label>")}return o.val(u),o},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n,d=i.val();if(void 0===t.Formater)n=$("<label IsSerialize='true' Text='"+o+"' BindName='"+t.BindName+"' Value='"+d+"'>"+d+"</label>");else{var o=t.Formater(d);n=$("<label IsSerialize='true' Text='"+o+"' BindName='"+t.BindName+"' Value='"+d+"'>"+o+"</label>")}return n.val(d),n},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)}},EditTable_Radio={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue)o=EditTableDefauleValue.GetValue(t);null!=d&&null!=d&&(o=d[u]),null!=i&&null!=i&&(o=i.val());var s="";return(s=null!=i&&null!=i&&"checked"==i.attr("checked")||1==o?$("<input type='radio' IsSerialize='true' BindName='"+t.BindName+"' name='"+t.BindName+"' checked='checked' value='1'/>"):$("<input type='radio' IsSerialize='true' BindName='"+t.BindName+"' name='"+t.BindName+"' value='0'/>")).val(o),s},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){i.val();return"checked"==i.attr("checked")?$("<input type='radio' IsSerialize='true' BindName='"+t.BindName+"' name='"+t.BindName+"'checked='checked'  value='1'/>"):$("<input type='radio' IsSerialize='true' BindName='"+t.BindName+"' name='"+t.BindName+"' value='0'/>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)}},EditTable_Select={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o=null;if(null!=t.ClientDataSource&&null!=t.ClientDataSource?o=t.ClientDataSource:null!=t.ClientDataSourceFunc&&null!=t.ClientDataSourceFunc&&(o=t.ClientDataSourceFunc(t.ClientDataSourceFuncParas,e,t,a,l,r,i,n,d)),null==o)return $("<label>找不到数据源设置,请在template中设置数据源</label>");var u="",s=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue)u=EditTableDefauleValue.GetValue(t);null!=d&&null!=d&&(u=d[s]),null!=i&&null!=i&&(u=i.attr("Value"));o[u];for(var _=$("<select />"),p=0;p<o.length;p++){var h=o[p];_.append("<option Value='"+h.Value+"' Text='"+h.Text+"'>"+h.Text+"</option>")}return _.val(u),"function"==typeof t.ChangeEvent&&_.change(function(){t.ChangeEvent(this,e,t,a,l,r,i)}),_},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n=i.find("option:selected").attr("Value"),d=i.find("option:selected").attr("Text");return $("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+n+"' Text='"+d+"'>"+d+"</label>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)}},EditTable_SelectRowCheckBox={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u=t.BindName;null!=d&&null!=d&&(o=d[u]),null!=i&&null!=i&&(o=i.attr("Value"));var s=$("<input IsSerialize='true' type='checkbox' checked='checked'  BindName='"+t.BindName+"' />");return s.attr("Value",o),s},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n=$(i).attr("Value"),d=$("<input IsSerialize='true' type='checkbox'  BindName='"+t.BindName+"' />");return d.attr("Value",n),d},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)}},EditTable_TextBox={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue)o=EditTableDefauleValue.GetValue(t);null!=d&&null!=d&&(o=d[u]),null!=i&&null!=i&&(o=i.html());var s=$("<input type='text' IsSerialize='true' style='width: 98%' />");return s.val(o),s},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n=i.val();return $("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+n+"'>"+n+"</label>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();if(void 0===t.Validate||"function"!=typeof t.Validate)return EditTableValidate.Validate(n,t);var d={Success:!0,Msg:null};return d.Success=t.Validate(),d}},Column_SelectDefaultValue={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u="",s="";null!=d&&null!=d&&(o=d.columnDefaultType?d.columnDefaultType:"",u=d.columnDefaultValue?d.columnDefaultValue:"",s=d.columnDefaultText?d.columnDefaultText:""),null!=i&&null!=i&&i.find("label").each(function(){"columnDefaultType"==$(this).attr("BindName")?o=$(this).attr("Value"):"columnDefaultText"==$(this).attr("BindName")?s=$(this).attr("Value"):"columnDefaultValue"==$(this).attr("BindName")&&(u=$(this).attr("Value"))});var _=$("<div></div>"),p=$("<input type='text' style='width: 90%' readonly />");p.attr("columnDefaultType",o),p.attr("columnDefaultValue",u),p.attr("columnDefaultText",s),p.val(JBuild4DSelectView.SelectEnvVariable.formatText(o,s));var h=$("<input class='normalbutton-v1' style='margin-left: 4px;' type='button' value='...'/>");return _.append(p).append(h),window.$Temp$Inputtxt=p,h.click(function(){JBuild4DSelectView.SelectEnvVariable.beginSelect("Column_SelectDefaultValue")}),_},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n=i.find("input[type='text']");if(0<n.length){var d=n.attr("columnDefaultType"),o=n.attr("columnDefaultValue"),u=n.attr("columnDefaultText"),s=$("<div></div>");return s.append("<label>"+JBuild4DSelectView.SelectEnvVariable.formatText(d,u)+"</label>"),s.append("<label IsSerialize='true' BindName='columnDefaultType' Value='"+d+"' style='display:none'/>"),s.append("<label IsSerialize='true' BindName='columnDefaultText' Value='"+u+"' style='display:none'/>"),s.append("<label IsSerialize='true' BindName='columnDefaultValue' Value='"+o+"' style='display:none'/>"),s}return $("<label></label>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)},setSelectEnvVariableResultValue:function(e){var t=window.$Temp$Inputtxt;null!=e?(t.attr("columnDefaultType",e.Type),t.attr("columnDefaultValue",e.Value),t.attr("columnDefaultText",e.Text),t.val(JBuild4DSelectView.SelectEnvVariable.formatText(e.Type,e.Text))):(t.attr("columnDefaultType",""),t.attr("columnDefaultValue",""),t.attr("columnDefaultText",""),t.val(""))}},EditTable_FieldName={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue)o=EditTableDefauleValue.GetValue(t);null!=d&&null!=d&&(o=d[u]),null!=i&&null!=i&&(o=i.html());var s=$("<input type='text' style='width: 98%' />");return s.val(o),s.attr("BindName",t.BindName),s.attr("Val",o),s.attr("IsSerialize","true"),s},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n=i.val().toUpperCase();return $("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+n+"'>"+n+"</label>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val(),d=EditTableValidate.Validate(n,t);return d.Success&&r.find("[renderer=EditTable_FieldName]").each(function(){$(this).find("label").each(function(){var e=$(this);e.text()!=n&&e.text()!=n.toUpperCase()||(d={Success:!1,Msg:"[字段名称]不能重复!"})})}),d}},EditTable_SelectDefaultValue={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u="",s="";null!=d&&null!=d&&(o=d.fieldDefaultType?d.fieldDefaultType:"",u=d.fieldDefaultValue?d.fieldDefaultValue:"",s=d.fieldDefaultText?d.fieldDefaultText:""),null!=i&&null!=i&&i.find("label").each(function(){"fieldDefaultType"==$(this).attr("BindName")?o=$(this).attr("Value"):"fieldDefaultText"==$(this).attr("BindName")?s=$(this).attr("Value"):"fieldDefaultValue"==$(this).attr("BindName")&&(u=$(this).attr("Value"))});var _=$("<div></div>"),p=$("<input type='text' style='width: 90%' readonly />");p.attr("fieldDefaultType",o),p.attr("fieldDefaultValue",u),p.attr("fieldDefaultText",s),p.val(JBuild4DSelectView.SelectEnvVariable.formatText(o,s));var h=$("<input class='normalbutton-v1' style='margin-left: 4px;' type='button' value='...'/>");return _.append(p).append(h),window.$Temp$Inputtxt=p,h.click(function(){JBuild4DSelectView.SelectEnvVariable.beginSelect("EditTable_SelectDefaultValue")}),_},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n=i.find("input[type='text']");if(0<n.length){var d=n.attr("fieldDefaultType"),o=n.attr("fieldDefaultValue"),u=n.attr("fieldDefaultText"),s=$("<div></div>");return s.append("<label>"+JBuild4DSelectView.SelectEnvVariable.formatText(d,u)+"</label>"),s.append("<label IsSerialize='true' BindName='fieldDefaultType' Value='"+d+"' style='display:none'/>"),s.append("<label IsSerialize='true' BindName='fieldDefaultText' Value='"+u+"' style='display:none'/>"),s.append("<label IsSerialize='true' BindName='fieldDefaultValue' Value='"+o+"' style='display:none'/>"),s}return $("<label></label>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)},setSelectEnvVariableResultValue:function(e){var t=window.$Temp$Inputtxt;null!=e?(t.attr("fieldDefaultType",e.Type),t.attr("fieldDefaultValue",e.Value),t.attr("fieldDefaultText",e.Text),t.val(JBuild4DSelectView.SelectEnvVariable.formatText(e.Type,e.Text))):(t.attr("fieldDefaultType",""),t.attr("fieldDefaultValue",""),t.attr("fieldDefaultText",""),t.val(""))}},EditTable_SelectFieldTypeDataLoader={_fieldDataTypeArray:null,GetFieldDataTypeArray:function(){if(null==this._fieldDataTypeArray){var a=this;AjaxUtility.PostSync("/PlatForm/Builder/DataStorage/DataBase/Table/GetTableFieldType.do",{},function(e){if(1==e.success){var t=JsonUtility.StringToJson(e.data);null!=t&&null!=t&&(a._fieldDataTypeArray=t)}else DialogUtility.Alert(window,"AlertLoadingQueryError",{},"加载字段类型失败！",null)},"json")}return this._fieldDataTypeArray},GetFieldDataTypeObjectByValue:function(e){for(var t=this.GetFieldDataTypeArray(),a=0;a<t.length;a++){var l=t[a];if(l.Value==e)return l}alert("找不到指定的数据类型，请确认是否支持该类型！")},GetFieldDataTypeObjectByText:function(e){for(var t=this.GetFieldDataTypeArray(),a=0;a<t.length;a++){var l=t[a];if(l.Text==e)return l}alert("找不到指定的数据类型，请确认是否支持该类型！")}},EditTable_SelectFieldType={Get_EditStatus_HtmlElem:function(e,t,a,l,r,i,n,d){var o="",u=$("<select />");null!=d&&null!=d&&(o=d.fieldDataType),null!=i&&null!=i&&(o=i.attr("Value"));for(var s=EditTable_SelectFieldTypeDataLoader.GetFieldDataTypeArray(),_=0;_<s.length;_++){var p=s[_].Value,h=s[_].Text;u.append("<option value='"+p+"'>"+h+"</option>")}return""!=o?u.val(o):u.val(EditTable_SelectFieldTypeDataLoader.GetFieldDataTypeObjectByText("字符串").Value),u.change(function(){var e=$(this).val();"整数"==e?($(a).next().find("input").attr("disabled",!0),$(a).next().find("input").val(0),$(a).next().next().find("input").attr("disabled",!0),$(a).next().next().find("input").val(0)):"小数"==e?($(a).next().find("input").attr("disabled",!1),$(a).next().find("input").val(10),$(a).next().next().find("input").attr("disabled",!1),$(a).next().next().find("input").val(2)):"日期时间"==e?($(a).next().find("input").attr("disabled",!0),$(a).next().find("input").val(20),$(a).next().next().find("input").attr("disabled",!0),$(a).next().next().find("input").val(0)):"字符串"==e?($(a).next().find("input").attr("disabled",!1),$(a).next().find("input").val(50),$(a).next().next().find("input").attr("disabled",!0),$(a).next().next().find("input").val(0)):"长字符串"==e&&($(a).next().find("input").attr("disabled",!0),$(a).next().find("input").val(0),$(a).next().next().find("input").attr("disabled",!0),$(a).next().next().find("input").val(0))}),u},Get_CompletedStatus_HtmlElem:function(e,t,a,l,r,i){var n=i.val(),d=EditTable_SelectFieldTypeDataLoader.GetFieldDataTypeObjectByValue(n).Text;return $("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+n+"'>"+d+"</label>")},ValidateToCompletedEnable:function(e,t,a,l,r,i){var n=i.val();return EditTableValidate.Validate(n,t)}},TreeTable={_$Prop_TableElem:null,_$Prop_RendererToElem:null,_Prop_Config:null,_Prop_JsonData:null,_Prop_AutoOpenLevel:0,_Prop_FirstColumn_Inden:20,_Prop_CurrentSelectedRowId:null,Initialization:function(e){this._Prop_Config=e,this._$Prop_RendererToElem=$("#"+this._Prop_Config.RendererTo),this._$Prop_TableElem=this.CreateTable(),this._$Prop_TableElem.append(this.CreateTableTitleRow()),this._$Prop_RendererToElem.append(this._$Prop_TableElem)},LoadJsonData:function(e){if(null!=e&&null!=e){this._Prop_JsonData=e,this._Prop_AutoOpenLevel=this._Prop_Config.OpenLevel;var t=this._GetRowDataId(e);this._CreateRootRow(e,t),this._LoopCreateRow(e,e.Nodes,1,t),this.RendererStyle()}else alert("Json Data Object Error")},_CreateRootRow:function(e,t){var a=this.CreateRowElem(e,0,null,!0,t);this._$Prop_TableElem.append(a),this.SetJsonDataExtendAttr_CurrentLevel(e,0),this.SetJsonDataExtendAttr_ParentIdList(e,t)},_LoopCreateRow:function(e,t,a,l){if(this._Prop_Config.IsOpenALL,null!=t)for(var r=0;r<t.length;r++){var i=t[r],n=this._TestRowIsOpen(a),d=this._GetRowDataId(i),o=this._CreateParentIdList(l,d);if(this.SetJsonDataExtendAttr_CurrentLevel(i,a),this.SetJsonDataExtendAttr_ParentIdList(i,o),rowElem=this.CreateRowElem(i,a,e,n,o),this._$Prop_TableElem.append(rowElem),null!=i.Nodes&&null!=i.Nodes&&0<i.Nodes.length){var u=a+1;this._LoopCreateRow(i,i.Nodes,u,o)}}},CreateTable:function(){var e=this._Prop_Config,t=$("<table />");return t.addClass(e.TableClass),t.attr("Id",e.TableId),t.attr(e.TableAttrs),t},SetJsonDataExtendAttr_CurrentLevel:function(e,t){e._Extend_CurrentLevel=t},GetJsonDataExtendAttr_CurrentLevel:function(e){return e._Extend_CurrentLevel},SetJsonDataExtendAttr_ParentIdList:function(e,t){e._Extend_ParentIdList=t},GetJsonDataExtendAttr_ParentIdList:function(e){return e._Extend_ParentIdList},CreateTableTitleRow:function(){for(var e=this._Prop_Config,t=$("<thead>                                <tr isHeader='true' />                            </thead>"),a=t.find("tr"),l=0;l<e.Templates.length;l++){var r=e.Templates[l],i=r.Title,n=$("<th>"+i+"</th>");r.TitleCellClassName&&n.addClass(r.TitleCellClassName),r.TitleCellAttrs&&n.attr(r.TitleCellAttrs),void 0!==r.Hidden&&1==r.Hidden&&n.hide(),r.Style&&n.css(r.Style),a.append(n)}return t},CreateRowElem:function(e,t,a,l,r){var i=this._Prop_Config,n=$("<tr />"),d=this._CreateElemId(e),o=this._GetRowDataId(e),u=this._CreateParentRowId(a);n.attr("rowId",o).attr("pid",u).attr("id",d).attr("currentLevel",t).attr("isdatarow","true");var s=e[i.ChildTestField];(1==s||"true"==s||0<s)&&n.attr("hasChild","true"),n.attr("rowIsOpen",l).attr("parentIdList",r);for(var _=0;_<i.Templates.length;_++){var p=i.Templates[_],h=e[p.FieldName],m=p.Width,f=p.Renderer,c=$('<td bindField="'+p.FieldName+"\" Renderer='"+f+"'>"+h+"</td>").css("width",m);if("DateTime"==f){var v=new Date(h),T=DateUtility.Format(v,"yyyy-MM-dd");c.text(T)}p.TextAlign&&c.css("textAlign",p.TextAlign),void 0!==p.Hidden&&1==p.Hidden&&c.hide(),void 0!==p.Style&&c.css(p.Style),n.append(c)}var C=this;return n.bind("click",null,function(e){$(".tr-selected").removeClass("tr-selected"),$(this).addClass("tr-selected"),C._Prop_CurrentSelectedRowId=$(this).attr("rowId"),void 0!==i.ClickRowEvent&&"function"==typeof i.ClickRowEvent&&i.ClickRowEvent(o)}),n.hover(function(){$(this).hasClass("tr-selected")||$(this).addClass("tr-hover")},function(){$(".tr-hover").removeClass("tr-hover")}),n},_TestRowIsOpen:function(e){return this._Prop_Config.OpenLevel>e},_CreateElemId:function(e){var t="";return null!=this._Prop_Config.RowIdPrefix&&null!=this._Prop_Config.RowIdPrefix!=null&&(t=this._Prop_Config.RowIdPrefix),t+this._GetRowDataId(e)},_CreateParentIdList:function(e,t){return e+"※"+t},_CreateParentIdListByParentJsonData:function(e,t){var a=this.GetJsonDataExtendAttr_ParentIdList(e),l=this._GetRowDataId(t);return this._CreateParentIdList(a,l)},_GetRowDataId:function(e){var t=this._Prop_Config.IdField;return null!=e[t]&&null!=e[t]?e[t]:(alert("在数据源中找不到用于构建Id的字段，请检查配置及数据源"),null)},_CreateParentRowId:function(e){return null==e?"Root":this._GetRowDataId(e)},RendererStyle:function(){var d=this;$("tr[isdatarow='true']").each(function(){var e=$(this),t=$(this).find("td:first"),a=e.attr("rowId"),l=t.text();t.css("padding-left",d._Prop_FirstColumn_Inden*parseInt($(this).attr("currentLevel")));var r=!1;"true"==e.attr("hasChild")&&(r=!0);var i=!1;"true"==e.attr("rowIsOpen")&&(i=!0);var n=d._CreateRowSwitchElem(r,i,a);t.html(""),t.append(n).append("<span>"+l+"</span>"),i||$("tr[pid='"+a+"']").hide()})},_GetIndenClass:function(e,t){return e&&t?"img-switch-open":e&&!t?"img-switch-close":e?"img-switch-close":"img-switch-open"},_CreateRowSwitchElem:function(r,e,t){var a=$('<div isswitch="true"></div>'),l=this._GetIndenClass(r,e);a.addClass(l);var i={RowId:t};return a.bind("click",i,function(e){if(r){var t=$(this).parent().parent(),a=t.attr("rowId"),l=!1;"true"==t.attr("rowIsOpen")&&(l=!0),l?(l=!1,$("tr[parentIdList*='"+a+"※']").hide(),$(this).removeClass("img-switch-open").addClass("img-switch-close"),$("tr[parentIdList*='"+a+"※'][haschild='true']").find("[isswitch='true']").removeClass("img-switch-open").addClass("img-switch-close"),$("tr[parentIdList*='"+a+"※'][haschild='true']").attr("rowisopen",!1)):(l=!0,$("tr[pid='"+a+"']").show(),$(this).removeClass("img-switch-close").addClass("img-switch-open")),t.attr("rowIsOpen",l)}}),a},GetChildsRowElem:function(e,t){return e?$("tr[parentIdList*='"+t+"']"):$("tr[pid='"+t+"']")},_Prop_SelectedRowData:null,_Prop_TempGetRowData:null,_GetSelectedRowData:function(e,t,a){if(e[this._Prop_Config.IdField]==t)a?this._Prop_SelectedRowData=e:this._Prop_TempGetRowData=e;else if(null!=e.Nodes&&null!=e.Nodes)for(var l=0;l<e.Nodes.length;l++)this._GetSelectedRowData(e.Nodes[l],t,a)},GetSelectedRowData:function(){return null==this._Prop_CurrentSelectedRowId?null:(this._GetSelectedRowData(this._Prop_JsonData,this._Prop_CurrentSelectedRowId,!0),this._Prop_SelectedRowData)},GetRowDataByRowId:function(e){return this._Prop_TempGetRowData=null,this._GetSelectedRowData(this._Prop_JsonData,e,!1),this._Prop_TempGetRowData},AppendChildRowToCurrentSelectedRow:function(e){var t=this.GetSelectedRowData();null!=t.Nodes&&null!=t.Nodes||(t.Nodes=new Array),t.Nodes.push(e),this.SetJsonDataExtendAttr_CurrentLevel(e,this.GetJsonDataExtendAttr_CurrentLevel(t)+1),this.SetJsonDataExtendAttr_ParentIdList(e,this._CreateParentIdListByParentJsonData(t,e));var a=this.CreateRowElem(e,this.GetJsonDataExtendAttr_CurrentLevel(t)+1,t,!0,this.GetJsonDataExtendAttr_ParentIdList(e)),l=this._GetRowDataId(t),r=$("tr[rowId='"+l+"']");r.attr("haschild","true");var i=$("tr[parentidlist*='"+l+"※']:last");0<i.length?i.after(a):(r.attr("rowisopen",!0),r.after(a)),this.RendererStyle()},UpdateToRow:function(e,t){var l=this.GetRowDataByRowId(e);for(var a in t)"Nodes"!=a&&(l[a]=t[a]);e=this._GetRowDataId(l);$("tr[rowid='"+e+"']").find("td").each(function(){var e=$(this).attr("bindField"),t=l[e];if("DateTime"==$(this).attr("Renderer")){var a=new Date(t);t=DateUtility.Format(a,"yyyy-MM-dd")}0<$(this).find("[isswitch='true']").length?$(this).find("span").text(t):$(this).text(t)})},LoadChildByAjax:function(){},DeleteRow:function(e){0<$("tr[pid='"+e+"']").length&&(this._Prop_Config.CanDeleteWhenHasChild||alert("指定的节点存在子节点，请先删除子节点！")),$("tr[parentidlist*='※"+e+"']").remove(),this._Prop_CurrentSelectedRowId=null},MoveUpRow:function(e){var t=$("tr[rowid='"+e+"']"),a=t.attr("pid"),l=$(t.prevAll("[pid='"+a+"']")[0]);$("tr[parentidlist*='※"+e+"']").insertBefore(l)},MoveDownRow:function(e){var t=$("tr[rowid='"+e+"']"),a=t.attr("pid"),l=$(t.nextAll("[pid='"+a+"']")[0]).attr("rowid"),r=$("tr[parentidlist*='※"+l+"']"),i=$(r[r.length-1]);$("tr[parentidlist*='※"+e+"']").insertAfter(i)},GetBrothersNodeDatasByParentId:function(e){for(var t=$("tr[rowid='"+e+"']"),a=t.attr("pid"),l=$(t.parent().find("[pid='"+a+"']")),r=new Array,i=0;i<l.length;i++)r.push(this.GetRowDataByRowId($(l[i]).attr("rowid")));return r},RemoveAllRow:function(){null!=this._$Prop_TableElem&&this._$Prop_TableElem.find("tr:not(:first)").each(function(){$(this).remove()})}},TreeTableConfig={CanDeleteWhenHasChild:!1,IdField:"Organ_Id",RowIdPrefix:"TreeTable_",LoadChildJsonURL:"",LoadChildFunc:null,OpenLevel:1,ChildTestField:"Child_Count",Templates:[{Title:"组织机构名称",FieldName:"Organ_Name",TitleCellClassName:"TitleCell",Renderer:"Lable",Hidden:!1,TitleCellAttrs:{},Width:"50%"},{Title:"组织机构缩写名称",FieldName:"Organ_ShortName",TitleCellClassName:"TitleCell",Renderer:"Lable",Hidden:!1,TitleCellAttrs:{},Width:"20%"},{Title:"组织编号",FieldName:"Organ_Code",TitleCellClassName:"TitleCell",Renderer:"Lable",Hidden:!1,TitleCellAttrs:{},Width:"20%"},{Title:"组织ID",FieldName:"Organ_Id",TitleCellClassName:"TitleCell",Renderer:"Lable",Hidden:!1,TitleCellAttrs:{},Width:"10"}],TableClass:"TreeTable",RendererTo:"divEditTable",TableId:"TreeTable",TableAttrs:{cellpadding:"0",cellspacing:"0",border:"0"}},TreeTableJsonData={Organ_Id:"0",Organ_Name:"root",Organ_ShortName:"2",Organ_Code:"2",Child_Count:2,Nodes:[{Organ_Id:"1",Organ_Name:"1Organ_Name",Organ_ShortName:"1",Organ_Code:"1",Child_Count:2,Nodes:[{Organ_Id:"1-1",Organ_Name:"1-1Organ_Name",Organ_ShortName:"1-1",Organ_Code:"1-1",Child_Count:1,Nodes:[{Organ_Id:"1-1-1",Organ_Name:"1-1-1Organ_Name",Organ_ShortName:"1-1-1",Organ_Code:"1-1",Child_Count:0}]},{Organ_Id:"1-2",Organ_Name:"1-2Organ_Name",Organ_ShortName:"1-2",Organ_Code:"1-2",Child_Count:0}]},{Organ_Id:"2",Organ_Name:"2Organ_Name",Organ_ShortName:"2",Organ_Code:"2",Child_Count:0},{Organ_Id:"3",Organ_Name:"3Organ_Name",Organ_ShortName:"3",Organ_Code:"3",Child_Count:0},{Organ_Id:"4",Organ_Name:"4Organ_Name",Organ_ShortName:"4",Organ_Code:"4",Child_Count:0}]},TreeTableJsonDataList=[{Organ_Id:"0",Organ_Name:"root",Organ_ShortName:"2",Organ_Code:"2",Child_Count:2},{Organ_Id:"1",Organ_Name:"1Organ_Name",Organ_ShortName:"1",Organ_Code:"1",Child_Count:2,Parent_Id:"0"},{Organ_Id:"2",Organ_Name:"2Organ_Name",Organ_ShortName:"2",Organ_Code:"2",Child_Count:0,Parent_Id:"0"},{Organ_Id:"1-1",Organ_Name:"1-1Organ_Name",Organ_ShortName:"1-1",Organ_Code:"1-1",Child_Count:1,Parent_Id:"1"},{Organ_Id:"1-2",Organ_Name:"1-2Organ_Name",Organ_ShortName:"1-2",Organ_Code:"1-2",Child_Count:0,Parent_Id:"1"},{Organ_Id:"1-1-1",Organ_Name:"1-1-1Organ_Name",Organ_ShortName:"1-1-1",Organ_Code:"1-1",Child_Count:0,Parent_Id:"1-1"}];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
