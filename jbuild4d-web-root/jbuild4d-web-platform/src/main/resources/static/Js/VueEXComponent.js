"use strict";Vue.component("db-table-relation-comp",{data:function(){return{acInterface:{getTablesDataUrl:"/PlatForm/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList",getTableFieldsUrl:"/PlatForm/Builder/DataStorage/DataBase/Table/GetTableFieldsByTableId"},relationTableTree:{treeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){window._dbtablerelationcomp.selectedRelationTableNode(i)}}},tableTreeRootData:{id:"-1",text:"数据关联",parentId:"",nodeTypeName:"根节点",icon:"../../../Themes/Png16X16/coins_add.png",_nodeExType:"root",tableId:"-1"},currentSelectedNode:null},relationTableEditorView:{isShowTableEditDetail:!1,isSubEditTr:!1,isMainEditTr:!1,selPKData:[],selSelfKeyData:[],selForeignKeyData:[]},emptyEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},currentEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},selectTableTree:{tableTreeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!0,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){if("Table"==i.nodeTypeName){var l=window._dbtablerelationcomp;$("#divSelectTable").dialog("close"),l.addTableToRelationTableTree(i)}}}},tableTreeData:null,selectedTableName:"无"},tempDataStore:{},resultData:[]}},mounted:function(){this.bindSelectTableTree(),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj.expandAll(!0),this.relationTableTree.currentSelectedNode=this.relationTableTree.treeObj.getNodeByParam("id","-1"),window._dbtablerelationcomp=this},watch:{currentEditorData:{handler:function(e,t){for(var i=0;i<this.resultData.length;i++)this.resultData[i].id==e.id&&this.resultItemCopyEditEnableValue(this.resultData[i],e)},deep:!0}},methods:{resultItemCopyEditEnableValue:function(e,t){e.singleName=t.singleName,e.pkFieldName=t.pkFieldName,e.desc=t.desc,e.selfKeyFieldName=t.selfKeyFieldName,e.outerKeyFieldName=t.outerKeyFieldName,e.relationType=t.relationType,e.isSave=t.isSave,e.condition=t.condition},getTableFieldsByTableId:function(t){if("-1"==t)return null;if(this.tempDataStore["tableField_"+t])return this.tempDataStore["tableField_"+t];var i=this;return AjaxUtility.PostSync(this.acInterface.getTableFieldsUrl,{tableId:t},function(e){e.success?i.tempDataStore["tableField_"+t]=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},"json"),this.tempDataStore["tableField_"+t]?this.tempDataStore["tableField_"+t]:null},getEmptyResultItem:function(){return JsonUtility.CloneSimple(this.emptyEditorData)},getExistResultItem:function(e){for(var t=0;t<this.resultData.length;t++)if(this.resultData[t].id==e)return this.resultData[t];return null},bindSelectTableTree:function(){var t=this;AjaxUtility.Post(this.acInterface.getTablesDataUrl,{},function(e){e.success?(t.selectTableTree.tableTreeData=e.data,t.selectTableTree.tableTreeObj=$.fn.zTree.init($("#selectTableZTreeUL"),t.selectTableTree.tableTreeSetting,t.selectTableTree.tableTreeData),t.selectTableTree.tableTreeObj.expandAll(!0)):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},"json")},deleteSelectedRelationTreeNode:function(){if(this.relationTableTree.currentSelectedNode)if(this.isSelectedRootRelationTableNode())DialogUtility.AlertText("不能删除根节点!");else if(this.relationTableTree.currentSelectedNode.isParent)DialogUtility.AlertText("不能删除父节点!");else{for(var e=0;e<this.resultData.length;e++)if(this.resultData[e].id==this.relationTableTree.currentSelectedNode.id){this.resultData.splice(e,1);break}this.resultItemCopyEditEnableValue(this.currentEditorData,this.emptyEditorData),this.currentEditorData.id="",this.currentEditorData.parentId="",this.$refs.sqlGeneralDesignComp.setValue(""),this.relationTableEditorView.selPKData=[],this.relationTableEditorView.selSelfKeyData=[],this.relationTableEditorView.selForeignKeyData=[],this.relationTableEditorView.isShowTableEditDetail=!1,this.relationTableTree.treeObj.removeNode(this.relationTableTree.currentSelectedNode,!1),this.relationTableTree.currentSelectedNode=null}else DialogUtility.AlertText("请选择要删除的节点!")},beginSelectTableToRelationTable:function(){this.relationTableTree.currentSelectedNode?$("#divSelectTable").dialog({modal:!0,height:600,width:500}):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"选择一个父节点!",null)},buildRelationTableNode:function(e){return"root"==this.relationTableTree.currentSelectedNode._nodeExType?(e._nodeExType="MainNode",e.icon="../../../Themes/Png16X16/page_key.png"):(e._nodeExType="SubNode",e.icon="../../../Themes/Png16X16/page_refresh.png"),e.tableId=e.id,e.id=StringUtility.Guid(),e},getMainRelationTableNode:function(){var e=this.relationTableTree.treeObj.getNodeByParam("_nodeExType","MainNode");return e||null},getMainTableId:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().tableId:""},getMainTableName:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().value:""},getMainTableCaption:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().attr1:""},isSelectedRootRelationTableNode:function(){return"-1"==this.relationTableTree.currentSelectedNode.id},isSelectedMainRelationTableNode:function(){return"MainNode"==this.relationTableTree.currentSelectedNode._nodeExType},addTableToRelationTableTree:function(e){if(e=this.buildRelationTableNode(e),null!=this.getMainRelationTableNode()&&this.isSelectedRootRelationTableNode())DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"只允许存在一个主记录!",null);else{this.relationTableTree.treeObj.addNodes(this.relationTableTree.currentSelectedNode,-1,e,!1);var t=this.getEmptyResultItem();t.id=e.id,t.parentId=this.relationTableTree.currentSelectedNode.id,t.tableId=e.tableId,t.tableName=e.value,t.tableCaption=e.attr1,this.resultData.push(t)}},selectedRelationTableNode:function(e){if(this.relationTableTree.currentSelectedNode=e,this.relationTableEditorView.isShowTableEditDetail=!this.isSelectedRootRelationTableNode(),this.relationTableEditorView.isMainEditTr=this.isSelectedMainRelationTableNode(),this.relationTableEditorView.isSubEditTr=!this.isSelectedMainRelationTableNode(),!this.isSelectedRootRelationTableNode()){this.relationTableEditorView.selPKData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[],this.relationTableEditorView.selSelfKeyData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[];var t=e.getParentNode();this.relationTableEditorView.selForeignKeyData=null!=this.getTableFieldsByTableId(t.tableId)?this.getTableFieldsByTableId(t.tableId):[],this.currentEditorData.id=this.relationTableTree.currentSelectedNode.id,this.currentEditorData.parentId=t.id;var i=this.getExistResultItem(e.id);if(null!=i){this.resultItemCopyEditEnableValue(this.currentEditorData,i);var l=this;window.setTimeout(function(){l.$refs.sqlGeneralDesignComp.setValue(l.currentEditorData.condition),l.$refs.sqlGeneralDesignComp.setAboutTableFields(l.relationTableEditorView.selSelfKeyData,l.relationTableEditorView.selForeignKeyData)},300)}else alert("通过getExistResultItem获取不到数据!")}},getResultData:function(){return this.resultData},serializeRelation:function(e){alert("serializeRelation已经停用")},deserializeRelation:function(e){alert("deserializeRelation已经停用")},getValue:function(){return{mainTableId:this.getMainTableId(),mainTableName:this.getMainTableName(),mainTableCaption:this.getMainTableCaption(),relationData:this.resultData}},setValue:function(e){var t=JsonUtility.StringToJson(e);this.resultData=t;for(var i=0;i<t.length;i++)t[i].value=t[i].tableName,t[i].attr1=t[i].tableCaption,t[i].text=t[i].tableCaption+"【"+t[i].tableName+"】";tempdata.push(this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,tempdata),this.relationTableTree.treeObj.expandAll(!0)},alertSerializeRelation:function(){DialogUtility.AlertJsonCode(this.resultData)},inputDeserializeRelation:function(){DialogUtility.Prompt(window,{width:900,height:600},DialogUtility.DialogPromptId,"请贴入数据关联Json设置字符串",function(e){try{window._dbtablerelationcomp.deserializeRelation(e)}catch(e){alert("反序列化失败:"+e)}})}},template:'<div class="db-table-relation-comp">                <divider orientation="left" :dashed="true" style="font-size: 12px">数据关系关联设置</divider>                <div style="float: left;width: 350px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">                    <button-group shape="circle" style="margin: auto">                        <i-button type="success" @click="beginSelectTableToRelationTable">&nbsp;添加&nbsp;</i-button>                        <i-button @click="deleteSelectedRelationTreeNode">&nbsp;删除&nbsp;</i-button>                        <i-button @click="alertSerializeRelation">序列化</i-button>                        <i-button @click="inputDeserializeRelation">反序列化</i-button>                        <i-button>说明</i-button>                    </button-group>                    <ul id="dataRelationZTreeUL" class="ztree"></ul>                </div>                <div style="float: right;width: 630px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">                    <table class="light-gray-table" cellpadding="0" cellspacing="0" border="0" v-if="relationTableEditorView.isShowTableEditDetail">                        <colgroup>                            <col style="width: 17%" />                            <col style="width: 33%" />                            <col style="width: 15%" />                            <col style="width: 35%" />                        </colgroup>                        <tbody>                            <tr>                                <td class="label">SingleName：</td>                                <td>                                    <i-input v-model="currentEditorData.singleName" size="small" placeholder="本关联中的唯一名称,可以为空" />                                </td>                                <td class="label">PKKey：</td>                                <td>                                    <i-select placeholder="默认使用Id字段" v-model="currentEditorData.pkFieldName" size="small" style="width:199px">                                        <i-option v-for="item in relationTableEditorView.selPKData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                                    </i-select>                                </td>                            </tr>                            <tr v-if="relationTableEditorView.isSubEditTr">                                <td class="label">数据关系：</td>                                <td>                                    <radio-group v-model="currentEditorData.relationType" type="button" size="small">                                        <radio label="1To1">1:1</radio>                                        <radio label="1ToN">1:N</radio>                                    </radio-group>                                </td>                                <td class="label">是否保存：</td>                                <td>                                    <radio-group v-model="currentEditorData.isSave" type="button" size="small">                                        <radio label="true">是</radio>                                        <radio label="false">否</radio>                                    </radio-group>                                </td>                            </tr>                            <tr v-if="relationTableEditorView.isSubEditTr">                                <td class="label">本身关联字段：</td>                                <td>                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.selfKeyFieldName" size="small" style="width:199px">                                        <i-option v-for="item in relationTableEditorView.selSelfKeyData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                                    </i-select>                                </td>                                <td class="label">外联字段：</td>                                <td>                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.outerKeyFieldName" size="small" style="width:199px">                                        <i-option v-for="item in relationTableEditorView.selPKData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                                    </i-select>                                </td>                            </tr>                            <tr>                                <td class="label">Desc：</td>                                <td colspan="3">                                    <i-input v-model="currentEditorData.desc" size="small" placeholder="说明" />                                </td>                            </tr>                            <tr>                                <td class="label">加载条件：</td>                                <td colspan="3">                                    <sql-general-design-comp ref="sqlGeneralDesignComp" :sqlDesignerHeight="74" v-model="currentEditorData.condition"></sql-general-design-comp>                                </td>                            </tr>                        </tbody>                    </table>                </div>                <div id="divSelectTable" title="请选择表" style="display: none">                    <ul id="selectTableZTreeUL" class="ztree"></ul>                </div>              </div>'}),Vue.component("design-html-elem-list",{data:function(){return{}},mounted:function(){},methods:{},template:'<div class="design-html-elem-list-wrap">            <div class="design-html-elem-list-item">格式化</div>            <div class="design-html-elem-list-item">说明</div>        </div>'}),Vue.component("fd-control-base-info",{props:["value"],data:function(){return{baseInfo:{id:"",serialize:"",name:"",className:"",placeholder:"",readonly:"",disabled:"",style:"",desc:""}}},watch:{baseInfo:function(e){this.$emit("input",e)},value:function(e){this.baseInfo=e}},mounted:function(){this.baseInfo=this.value},methods:{},template:'<table class="html-design-plugin-dialog-table-wraper" cellpadding="0" cellspacing="0" border="0"><colgroup><col style="width: 100px" /><col style="width: 280px" /><col style="width: 90px" /><col style="width: 110px" /><col style="width: 90px" /><col /></colgroup><tr><td>ID：</td><td><input type="text" v-model="baseInfo.id" /></td><td>Serialize：</td><td colspan="3"><radio-group type="button" style="margin: auto" v-model="baseInfo.serialize"><radio label="true">是</radio><radio label="false">否</radio></radio-group></td></tr><tr><td>Name：</td><td><input type="text" v-model="baseInfo.name" /></td><td>ClassName：</td><td colspan="3"><input type="text" v-model="baseInfo.className" /></td></tr><tr><td>Placeholder</td><td><input type="text" v-model="baseInfo.placeholder" /></td><td>Readonly：</td><td style="text-align: center"><radio-group type="button" style="margin: auto" v-model="baseInfo.readonly"><radio label="readonly">是</radio><radio label="noreadonly">否</radio></radio-group></td><td>Disabled：</td><td style="text-align: center"><radio-group type="button" style="margin: auto" v-model="baseInfo.disabled"><radio label="disabled">是</radio><radio label="nodisabled">否</radio></radio-group></td></tr><tr><td>样式：</td><td colspan="5"><textarea rows="7" v-model="baseInfo.style"></textarea></td></tr><tr><td>备注：</td><td colspan="5"><textarea rows="8" v-model="baseInfo.desc"></textarea></td></tr></table>'}),Vue.component("fd-control-bind-to",{props:["bindToFieldProp","defaultValueProp","validateRulesProp"],data:function(){return{bindToField:{tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},validateRules:{msg:"",rules:[]},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tempData:{defaultDisplayText:""}}},watch:{bindToProp:function(e){console.log(e)},bindToFieldProp:function(e){this.bindToField=e},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=JBuild4DSelectView.SelectEnvVariable.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))},validateRulesProp:function(e){this.validateRules=e}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{setCompleted:function(){this.$emit("on-set-completed",this.bindToField,this.defaultValue,this.validateRules)},selectBindFieldView:function(){JBuild4DSelectView.SelectBindToField.beginSelectInFrame(window,"_SelectBindObj",{}),window._SelectBindObj=this},setSelectFieldResultValue:function(e){this.bindToField={},this.bindToField.fieldLength=null!=e?(this.bindToField.fieldName=e.fieldName,this.bindToField.tableId=e.tableId,this.bindToField.tableName=e.tableName,this.bindToField.tableCaption=e.tableCaption,this.bindToField.fieldCaption=e.fieldCaption,this.bindToField.fieldDataType=e.fieldDataType,e.fieldLength):(this.bindToField.fieldName="",this.bindToField.tableId="",this.bindToField.tableName="",this.bindToField.tableCaption="",this.bindToField.fieldCaption="",this.bindToField.fieldDataType=""),this.setCompleted()},getSelectFieldResultValue:function(){return JsonUtility.CloneSimple(this.bindToField)},selectDefaultValueView:function(){JBuild4DSelectView.SelectEnvVariable.beginSelectInFrame(window,"_SelectBindObj",{}),window._SelectBindObj=this},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,JBuild4DSelectView.SelectEnvVariable.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText=""),this.setCompleted()},selectValidateRuleView:function(){JBuild4DSelectView.SelectValidateRule.beginSelectInFrame(window,"_SelectBindObj",{}),window._SelectBindObj=this},setSelectValidateRuleResultValue:function(e){null!=e?(this.validateRules=e,this.setCompleted()):(this.validateRules.msg="",this.validateRules.rules=[])},getSelectValidateRuleResultValue:function(){return this.validateRules}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper"><colgroup><col style="width: 100px" /><col style="width: 280px" /><col style="width: 100px" /><col /></colgroup><tr><td colspan="4">    绑定到表<button class="btn-select fright" v-on:click="selectBindFieldView">...</button></td></tr><tr><td>表编号：</td><td colspan="3">{{bindToField.tableId}}</td></tr><tr><td>表名：</td><td>{{bindToField.tableName}}</td><td>表标题：</td><td>{{bindToField.tableCaption}}</td></tr><tr><td>字段名：</td><td>{{bindToField.fieldName}}</td><td>字段标题：</td><td>{{bindToField.fieldCaption}}</td></tr><tr><td>类型：</td><td>{{bindToField.fieldDataType}}</td><td>长度：</td><td>{{bindToField.fieldLength}}</td></tr><tr><td colspan="4">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td></tr><tr style="height: 35px"><td colspan="4" style="background-color: #ffffff;">{{tempData.defaultDisplayText}}</td></tr><tr><td colspan="4">    校验规则<button class="btn-select fright" v-on:click="selectValidateRuleView">...</button></td></tr><tr><td colspan="4" style="background-color: #ffffff"><table class="html-design-plugin-dialog-table-wraper"><colgroup><col style="width: 100px" /><col /></colgroup><tr><td style="text-align: center;">提示消息：</td><td>{{validateRules.msg}}</td></tr><tr><td style="text-align: center;">验证类型</td><td style="background: #e8eaec;text-align: center;">参数</td></tr><tr v-for="ruleItem in validateRules.rules"><td style="background: #ffffff;text-align: center;color: #ad9361">{{ruleItem.validateType}}</td><td style="background: #ffffff;text-align: center;"><p v-if="ruleItem.validateParas === \'\'">无参数</p><p v-else>{{ruleItem.validateParas}}</p></td></tr></table></td></tr></table>'}),Vue.component("js-design-code-fragment",{data:function(){return{jsEditorInstance:null}},mounted:function(){},methods:{setJSEditorInstance:function(e){this.jsEditorInstance=e},getJsEditorInst:function(){return this.jsEditorInstance},insertJs:function(e){var t=this.getJsEditorInst().getDoc(),i=t.getCursor();t.replaceRange(e,i)},formatJS:function(){CodeMirror.commands.selectAll(this.getJsEditorInst());var e={from:this.getJsEditorInst().getCursor(!0),to:this.getJsEditorInst().getCursor(!1)};this.getJsEditorInst().autoFormatRange(e.from,e.to)},alertDesc:function(){},refScript:function(){this.insertJs('<script type="text/javascript" src="${contextPath}/UIComponent/TreeTable/Js/TreeTable.js"><\/script>')},callServiceMethod:function(){}},template:'<div class="js-code-fragment-wrap">            <div class="js-code-fragment-item" @click="formatJS">格式化</div>            <div class="js-code-fragment-item">说明</div>            <div class="js-code-fragment-item" @click="refScript">引入脚本</div>            <div class="js-code-fragment-item">获取URL参数</div>            <div class="js-code-fragment-item">调用服务方法</div>            <div class="js-code-fragment-item">加载数据字典</div>        </div>'}),Vue.component("module-list-webform-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/PlatForm/Builder/Form/DetailView",reloadData:"/PlatForm/Builder/Form/GetListData",delete:"/PlatForm/Builder/Form/Delete",move:"/PlatForm/Builder/Form/Move"},idFieldName:"formId",searchCondition:{formModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"formCode",align:"center",width:80},{title:"表单名称",key:"formName",align:"center"},{title:"唯一名",key:"formSingleName",align:"center"},{title:"备注",key:"formDesc",align:"center"},{title:"编辑时间",key:"formUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.formUpdateTime)}},{title:"操作",key:"formId",width:120,align:"center",render:function(e,t){return console.log(t),console.log(this),e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.ViewButton(e,t,this.idFieldName,i),ListPageUtility.IViewTableInnerButton.EditButton(e,t,this.idFieldName,this),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,this.idFieldName,this)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){this.reloadData()},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var l=this.tableData[i];0<=l.formCode.indexOf(e)?t.push(l):0<=l.formName.indexOf(e)&&t.push(l)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-webform"==this.activeTabName&&(this.searchCondition.formModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableLoadDataSearch(this.acInterface.reloadData,this.pageNum,this.pageSize,this.searchCondition,this,this.idFieldName,!0,function(e,t){t.tableDataOriginal=e.data.list},!1))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,e,{width:0,height:0},2)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,t,{width:0,height:0},2)},view:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"view",recordId:e});DialogUtility.Frame_OpenIframeWindow(window,DialogUtility.DialogId,t,{title:"通用列表"},2)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,appList)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,appList.idFieldName,e,appList)}},template:'<div class="module-list-wrap">                    <div id="list-button-wrap" class="list-button-outer-wrap">                        <div class="list-button-inner-wrap">                            <ButtonGroup>                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>                                <i-button type="error" icon="md-add">引入URL </i-button>                                <i-button type="error" icon="md-albums">复制</i-button>                                <i-button type="error" icon="md-pricetag">预览</i-button>                                <i-button type="error" icon="md-bookmarks">历史版本</i-button>                                <i-button type="error" icon="md-brush">复制ID</i-button>                                <i-button type="primary" icon="md-arrow-up">上移</i-button>                                <i-button type="primary" icon="md-arrow-down">下移</i-button>                            </ButtonGroup>                        </div>                         <div style="float: right;width: 200px;margin-right: 10px;">                            <i-input search class="input_border_bottom" v-model="searchText">                            </i-input>                        </div>                        <div style="clear: both"></div>                    </div>                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"                             class="iv-list-table" :highlight-row="true"                             @on-selection-change="selectionChange"></i-table>                </div>'}),Vue.component("sql-general-design-comp",{props:["sqlDesignerHeight","value"],data:function(){return{sqlText:"",selectedItemValue:"说明",selfTableFields:[],parentTableFields:[]}},watch:{sqlText:function(e){this.$emit("input",e)},value:function(e){this.sqlText=e}},mounted:function(){this.sqlCodeMirror=CodeMirror.fromTextArea($("#TextAreaSQLEditor")[0],{mode:"text/x-sql",lineNumbers:!0,lineWrapping:!0,foldGutter:!0,theme:"monokai"}),this.sqlCodeMirror.setSize("100%",this.sqlDesignerHeight);var t=this;this.sqlCodeMirror.on("change",function(e){console.log(e.getValue()),t.sqlText=e.getValue()})},methods:{getValue:function(){this.sqlCodeMirror.getValue()},setValue:function(e){this.sqlCodeMirror.setValue(e)},setAboutTableFields:function(e,t){this.selfTableFields=e,this.parentTableFields=t},insertEnvToEditor:function(e){this.insertCodeAtCursor(e)},insertFieldToEditor:function(e,t){var i=null;i="selfTableFields"==e?this.selfTableFields:this.parentTableFields;for(var l=0;l<i.length;l++)i[l].fieldName==t&&this.insertCodeAtCursor(i[l].tableName+"."+i[l].fieldName)},insertCodeAtCursor:function(e){var t=this.sqlCodeMirror.getDoc(),i=t.getCursor();t.replaceRange(e,i)}},template:'<div>                <textarea id="TextAreaSQLEditor"></textarea>                <div style="text-align: right;margin-top: 8px">                    <ButtonGroup size="small">                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织ID}\')">组织Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织名称}\')">组织名称</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户ID}\')">用户Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户名称}\')">用户名称</Button>                        <Button @click="insertEnvToEditor(\'#{DateTime.年年年年-月月-日日}\')">yyyy-MM-dd</Button>                        <Button>说明</Button>                    </ButtonGroup>                </div>                <div style="margin-top: 8px">                    <div style="float: left;margin: 4px 10px">本表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:175px" @on-change="insertFieldToEditor(\'selfTableFields\',$event)">                            <i-option v-for="item in selfTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                    <div style="float: left;margin: 4px 10px">父表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:177px" @on-change="insertFieldToEditor(\'parentTableFields\',$event)">                            <i-option v-for="item in parentTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                </div>              </div>'});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
