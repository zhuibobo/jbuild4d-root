"use strict";var AjaxUtility={PostRequestBody:function(t,e,i,n){this.Post(t,e,i,n,"application/json; charset=utf-8")},PostSync:function(t,e,i,n,o){return this.Post(t,e,i,n,o,!1)},Post:function(t,e,i,n,o,r){var a=BaseUtility.BuildAction(t);null!=n&&null!=n||(n="text"),null!=r&&null!=r||(r=!0),null!=o&&null!=o||(o="application/x-www-form-urlencoded; charset=UTF-8");var l=null;return $.ajax({type:"POST",url:a,cache:!1,async:r,contentType:o,dataType:n,data:e,success:function(t){try{null==t||null==t.success||t.success||"登录Session过期"==t.message&&DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"Session超时，请重新登陆系统",function(){BaseUtility.RedirectToLogin()})}catch(t){console.log("AjaxUtility.Post Exception "+a)}i(t),l=t},complete:function(t){},error:function(t){try{0<=t.responseText.indexOf("请重新登陆系统")&&BaseUtility.RedirectToLogin(),console.log(t),DialogUtility.Alert(window,"AjaxUtility.Post.Error",{},"Ajax请求发生错误！status:"+t.status+",responseText:"+t.responseText,null)}catch(t){}}}),l},GetSync:function(t,e,i,n){this.Post(t,e,i,n,!1)},Get:function(t,e,i,n,o){var r=BaseUtility.BuildUrl(t);null!=n&&null!=n||(n="text"),null!=o&&null!=o||(o=!0),$.ajax({type:"GET",url:r,cache:!1,async:o,contentType:"application/json; charset=utf-8",dataType:n,data:e,success:function(t){i(t)},complete:function(t){},error:function(t){}})}},BaseUtility={GetRootPath:function(){var t=window.document.location.href,e=window.document.location.pathname,i=t.indexOf(e);return t.substring(0,i)+e.substring(0,e.substr(1).indexOf("/")+1)},ReplaceUrlVariable:function(t){alert("ReplaceUrlVariable迁移到BuildAction")},GetTopWindow:function(){alert("BaseUtility.GetTopWindow 已停用")},TrySetControlFocus:function(){alert("BaseUtility.TrySetControlFocus 已停用")},BuildUrl:function(t){alert("BaseUtility.BuildUrl 已停用")},BuildView:function(t,e){return StringUtility.EndWith(t,"View")?this.BuildAction(t,e):(DialogUtility.AlertText(t+"视图Url请用View作为结尾."),"")},BuildAction:function(t,e){var i="";e&&(i=$.param(e));var n=this.GetRootPath()+t+".do";return""!=i&&(n+="?"+i),this.AppendTimeStampUrl(n)},RedirectToLogin:function(){var t=BaseUtility.GetRootPath()+"/Login.do";window.parent.parent.location.href=t},AppendTimeStampUrl:function(t){if("0"<t.indexOf("timestamp"))return t;var e=(new Date).getTime();return t=-1<t.indexOf("?")?t+"&timestamp="+e:t+"?timestamp="+e},GetUrlParaValue:function(t){return this.GetUrlParaValueByString(t,window.location.search)},GetUrlParaValueByString:function(t,e){var i=new RegExp("(^|&)"+t+"=([^&]*)(&|$)"),n=e.substr(1).match(i);return null!=n?decodeURIComponent(n[2]):""}},BrowserInfoUtility={BrowserAppName:function(){return 0<navigator.userAgent.indexOf("Firefox")?"Firefox":0<navigator.userAgent.indexOf("MSIE")?"IE":0<navigator.userAgent.indexOf("Chrome")?"Chrome":void 0},IsIE:function(){return!!(window.ActiveXObject||"ActiveXObject"in window)},IsIE6:function(){return 0<navigator.userAgent.indexOf("MSIE 6.0")},IsIE7:function(){return 0<navigator.userAgent.indexOf("MSIE 7.0")},IsIE8:function(){return 0<navigator.userAgent.indexOf("MSIE 8.0")},IsIE8X64:function(){return 0<navigator.userAgent.indexOf("MSIE 8.0")&&0<navigator.userAgent.indexOf("x64")},IsIE9:function(){return 0<navigator.userAgent.indexOf("MSIE 9.0")},IsIE9X64:function(){return 0<navigator.userAgent.indexOf("MSIE 9.0")&&0<navigator.userAgent.indexOf("x64")},IsIE10:function(){return 0<navigator.userAgent.indexOf("MSIE 10.0")},IsIE10X64:function(){return 0<navigator.userAgent.indexOf("MSIE 10.0")&&0<navigator.userAgent.indexOf("x64")},IEDocumentMode:function(){return document.documentMode},IsIE8DocumentMode:function(){return 8==this.IEDocumentMode()},IsFirefox:function(){return"Firefox"==this.BrowserAppName()},IsChrome:function(){return"Chrome"==this.BrowserAppName()}},CacheDataUtility={IninClientCache:function(){this.GetCurrentUserInfo()},_CurrentUserInfo:null,GetCurrentUserInfo:function(){return null==this._CurrentUserInfo?null!=window.parent.CacheDataUtility._CurrentUserInfo?window.parent.CacheDataUtility._CurrentUserInfo:(AjaxUtility.PostSync("/PlatForm/MyInfo/GetUserInfo",{},function(t){t.success&&(CacheDataUtility._CurrentUserInfo=t.data)},"json"),this._CurrentUserInfo):this._CurrentUserInfo}},CookieUtility={SetCookie1Day:function(t,e){var i=new Date;i.setTime(i.getTime()+864e5),document.cookie=t+"="+escape(e)+";expires="+i.toGMTString()+";path=/"},SetCookie1Month:function(t,e){var i=new Date;i.setTime(i.getTime()+2592e6),document.cookie=t+"="+escape(e)+";expires="+i.toGMTString()+";path=/"},SetCookie1Year:function(t,e){var i=new Date;i.setTime(i.getTime()+94608e7),document.cookie=t+"="+escape(e)+";expires="+i.toGMTString()+";path=/"},GetCookie:function(t){var e=document.cookie.match(new RegExp("(^| )"+t+"=([^;]*)(;|$)"));return null!=e?unescape(e[2]):null},DelCookie:function(t){var e=new Date;e.setTime(e.getTime()-1);var i=this.getCookie(t);null!=i&&(document.cookie=t+"="+i+";expires="+e.toGMTString()+";path=/")}},DateUtility={GetCurrentDataString:function(t){alert("DateUtility.GetCurrentDataString 已停用")},DateFormat:function(t,e){alert("DateUtility.GetCurrentDataString 已停用")},Format:function(t,e){var i={"M+":t.getMonth()+1,"d+":t.getDate(),"h+":t.getHours(),"m+":t.getMinutes(),"s+":t.getSeconds(),"q+":Math.floor((t.getMonth()+3)/3),S:t.getMilliseconds()};for(var n in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(t.getFullYear()+"").substr(4-RegExp.$1.length))),i)new RegExp("("+n+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?i[n]:("00"+i[n]).substr((""+i[n]).length)));return e},FormatCurrentData:function(t){var e=new Date;return this.Format(e,t)},GetCurrentData:function(){return new Date}},DetailPageUtility={IViewPageToViewStatus:function(){},OverrideObjectValue:function(t,e){for(var i in t)null!=e[i]&&null!=e[i]&&""!=e[i]&&(t[i]=e[i])},BindFormData:function(t,e,i,n,o,r){AjaxUtility.Post(t,{recordId:i,op:n},function(t){t.success?("function"==typeof o&&o(t),DetailPageUtility.OverrideObjectValue(e,t.data),"function"==typeof r&&r(t),"view"==n&&DetailPageUtility.IViewPageToViewStatus()):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},t.message,null)},"json")}},DialogUtility={DialogAlertId:"DefaultDialogAlertUtility01",DialogPromptId:"DefaultDialogPromptUtility01",DialogId:"DefaultDialogUtility01",DialogId02:"DefaultDialogUtility02",DialogId03:"DefaultDialogUtility03",DialogId04:"DefaultDialogUtility04",DialogId05:"DefaultDialogUtility05",_GetElem:function(t){return $("#"+t)},_CreateDialogElem:function(t,e){if(0!=this._GetElem(e).length)return this._GetElem(e);var i=$("<div id="+e+" title='系统提示' style='display:none'>                    </div>");return $(t.body).append(i),i},_CreateAlertLoadingMsgElement:function(t,e){if(0!=this._GetElem(e).length)return this._GetElem(e);var i=$("<div id="+e+" title='系统提示' style='display:none'>                               <div class='alertloading-img'></div>                               <div class='alertloading-txt'></div>                           </div>");return $(t.body).append(i),i},_CreateIfrmaeDialogElement:function(t,e,i){var n=$("<div id="+e+" title='Basic dialog' style='display:none'>                        <iframe width='100%' height='98%' frameborder='0' src='"+i+"'>                        </iframe>                    </div>");return $(t.body).append(n),n},_TestDialogElemIsExist:function(t){return 0<this._GetElem(t).length},_TestRunEnable:function(){return!0},AlertError:function(t,e,i,n,o){var r={height:400,width:600};r=$.extend(!0,{},r,i),this.Alert(t,e,r,n,o)},AlertText:function(t){DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},t,null)},Alert:function(t,e,i,n,o){var r=this._CreateDialogElem(t.document.body,e),a={height:200,width:300,title:"系统提示",show:!0,modal:!0,buttons:{"关闭":function(){$(r).dialog("close")}},open:function(){},close:function(){o&&o()}};a=$.extend(!0,{},a,i);$(r).html(n),$(r).dialog(a)},AlertJsonCode:function(t){t=(t=(t=JsonUtility.JsonToStringFormat(t)).replace(/&/g,"&").replace(/</g,"<").replace(/>/g,">")).replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,function(t){var e="json-number";return/^"/.test(t)?e=/:$/.test(t)?"json-key":"json-string":/true|false/.test(t)?e="json-boolean":/null/.test(t)&&(e="json-null"),'<span class="'+e+'">'+t+"</span>"}),this.Alert(window,DialogUtility.DialogAlertId,{width:900,height:600},"<pre class='json-pre'>"+t+"</pre>",null)},ShowHTML:function(t,e,i,n,o,r){var a=this._CreateDialogElem(t.document.body,e),l={height:200,width:300,title:"系统提示",show:!0,modal:!0,close:function(t,e){try{"function"==typeof o&&o(r)}catch(t){}}};l=$.extend(!0,{},l,i);return $(a).html(n),$(a).dialog(l)},AlertLoading:function(t,e,i,n){var o=this._CreateAlertLoadingMsgElement(t.document.body,e),r={height:200,width:300,title:"",show:!0,modal:!0};r=$.extend(!0,{},r,i);$(o).find(".alertloading-txt").html(n),$(o).dialog(r)},Confirm:function(t,e,i){this.ConfirmConfig(t,e,null,i)},ConfirmConfig:function(e,t,i,n){var o=this._CreateDialogElem(e.document.body,"AlertConfirmMsg"),r=null,a={okfunc:function(t){if(null!=n)return n();e.close()},cancelfunc:function(t){},validatefunc:function(t){return!0},closeafterfunc:!0,height:200,width:300,title:"系统提示",show:!0,modal:!0,buttons:{"确认":function(){if(a.validatefunc(r)){var t=a.okfunc(r);(t=null==t||t)&&a.closeafterfunc&&$(o).dialog("close")}},"取消":function(){a.cancelfunc(r),a.closeafterfunc&&$(o).dialog("close")}}};a=$.extend(!0,{},a,i);$(o).html(t),$(o).dialog(a),r={ElementObj:o}},Prompt:function(t,e,i,n,o){var r=this._CreateDialogElem(t.document.body,i),a=$("<textarea />"),l={height:200,width:300,title:"",show:!0,modal:!0,buttons:{"确认":function(){if("function"==typeof o){var t=a.val();o(t)}$(r).dialog("close")},"取消":function(){$(r).dialog("close")}}};l=$.extend(!0,{},l,e);$(a).css("height",l.height-130);var u=$("<div>"+n+"：</div>").append(a);$(r).html(u),$(r).dialog(l)},DialogElem:function(t,e){$(t).dialog(e)},OpenIframeWindow:function(t,e,i,n,o){var r={height:410,width:600,close:function(t,e){var i=$(this).attr("id");$(this).find("iframe").remove(),$(this).dialog("close"),$(this).dialog("destroy"),$("#"+i).remove(),BrowserInfoUtility.IsIE8DocumentMode()&&CollectGarbage(),"function"==typeof n.close_after_event&&n.close_after_event();try{0<$("#Forfocus").length&&$("#Forfocus")[0].focus()}catch(t){}}};1==o?r=$.extend(!0,{},r,{height:680,width:980}):2==o?r=$.extend(!0,{},r,{height:600,width:800}):4==o?r=$.extend(!0,{},r,{height:380,width:480}):5==o&&(r=$.extend(!0,{},r,{height:180,width:300})),0==n.width&&(n.width=PageStyleUtil.GetPageWidth()-20),0==n.height&&(n.height=PageStyleUtil.GetPageHeight()-10),r=$.extend(!0,{},r,n);var a=e,l=this._CreateIfrmaeDialogElement(t.document,a,i),u=$(l).dialog(r),s=$(l).find("iframe");return s[0].contentWindow.FrameWindowId=a,s[0].contentWindow.OpenerWindowObj=t,u},CloseOpenIframeWindow:function(t,e){t.OpenerWindowObj.DialogUtility.CloseDialog(e)},CloseDialog:function(t){this._GetElem(t).find("iframe").remove(),$(this._GetElem(t)).dialog("close");try{0<$("#Forfocus").length&&$("#Forfocus")[0].focus()}catch(t){}},OpenNewWindow:function(t,e,i,n,o){var r=n.width,a=n.height,l=parseInt((screen.availWidth-r)/2).toString(),u=parseInt((screen.availHeight-a)/2).toString();"0"==r.toString()&&"0"==a.toString()&&(r=window.screen.availWidth-30,a=window.screen.availHeight-60,u=l="0"),null==window.open(i,"","scrollbars=no,toolbar=no,menubar=no,resizable=yes,center=yes,help=no, status=yes,top= "+u+"px,left="+l+"px,width="+r+"px,height="+a+"px")&&alert("请解除浏览器对本系统弹出窗口的阻止设置！")},_TryGetParentWindow:function(t){return null!=t.parent?t.parent:null},_Frame_TryGetFrameWindowObj:function(e,i,n){if(n<i){n++;try{return e.IsTopFramePage?e:this._Frame_TryGetFrameWindowObj(this._TryGetParentWindow(e),i,n)}catch(t){return this._Frame_TryGetFrameWindowObj(this._TryGetParentWindow(e),i,n)}}return null},_OpenWindowInFramePage:function(t,e,i,n,o){if(StringUtility.IsNullOrEmpty(e))alert("dialogId不能为空");else{i=BaseUtility.AppendTimeStampUrl(i);var r="FrameDialogEle"+e;if(0==$(this.FramePageRef.document).find("#"+r).length){var a=this._CreateIfrmaeDialogElement(this.FramePageRef.document,r,i),l={height:400,width:600,modal:!0,title:"系统",close:function(t,e){var i=$(this).attr("id");$(this).find("iframe").remove(),$(this).dialog("close"),$(this).dialog("destroy"),$("#"+i).remove(),BrowserInfoUtility.IsIE8DocumentMode()&&CollectGarbage(),"function"==typeof n.close_after_event&&n.close_after_event()}};0==o?(n.width=PageStyleUtility.GetPageWidth()-20,n.height=PageStyleUtility.GetPageHeight()-10):1==o?l=$.extend(!0,{},l,{height:680,width:980}):2==o?l=$.extend(!0,{},l,{height:600,width:800}):4==o?l=$.extend(!0,{},l,{height:380,width:480}):5==o&&(l=$.extend(!0,{},l,{height:180,width:300})),0==n.width&&(n.width=PageStyleUtility.GetPageWidth()-20),0==n.height&&(n.height=PageStyleUtility.GetPageHeight()-10),l=$.extend(!0,{},l,n),$(a).dialog(l),$(".ui-widget-overlay").css("zIndex","1000"),$(".ui-dialog").css("zIndex","1001");var u=$(a).find("iframe");u[0].contentWindow.FrameWindowId=r,u[0].contentWindow.OpenerWindowObj=t,u[0].contentWindow.IsOpenForFrame=!0}else $("#"+r).dialog("moveToTop")}},_Frame_FramePageCloseDialog:function(t){$("#"+t).dialog("close")},Frame_TryGetFrameWindowObj:function(){return this._Frame_TryGetFrameWindowObj(window,5,1)},Frame_Alert:function(){},Frame_Comfirm:function(){},Frame_OpenIframeWindow:function(t,e,i,n,o){var r=this.Frame_TryGetFrameWindowObj();null!=(this.FramePageRef=r)?(this.FramePageRef.DialogUtility.FramePageRef=r,this.FramePageRef.DialogUtility._OpenWindowInFramePage(t,e,i,n,o)):alert("找不到FramePage!!")},Frame_CloseDialog:function(t){var e=this.Frame_TryGetFrameWindowObj(),i=(t.OpenerWindowObj,t.FrameWindowId);e.DialogUtility._Frame_FramePageCloseDialog(i)}},DictionaryUtility={_GroupValueListJsonToSimpleJson:null,GroupValueListJsonToSimpleJson:function(t){if(null==this._GroupValueListJsonToSimpleJson&&null!=t){var e={};for(var i in t){e[i]={};for(var n=0;n<t[i].length;n++)e[i][t[i][n].dictValue]=t[i][n].dictText}this._GroupValueListJsonToSimpleJson=e}return this._GroupValueListJsonToSimpleJson}},console=console||{log:function(){},warn:function(){},error:function(){}};function DateExtend_DateFormat(t,e){if(null==t||null==t)return"";var i={"M+":t.getMonth()+1,"d+":t.getDate(),"h+":t.getHours(),"m+":t.getMinutes(),"s+":t.getSeconds(),S:t.getMilliseconds()};for(var n in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(t.getFullYear()+"").substr(4-RegExp.$1.length))),i)new RegExp("("+n+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?i[n]:("00"+i[n]).substr((""+i[n]).length)));return e}function refCssLink(t){var e=document.head||document.getElementsByTagName("head")[0],i=document.createElement("link");return i.type="text/css",i.rel="stylesheet",i.href=t,e.appendChild(i),i.sheet||i.styleSheet}Date.prototype.toJSON=function(){return DateExtend_DateFormat(this,"yyyy-MM-dd mm:hh:ss")},Object.create||(Object.create=function(){function e(){}return alert("Extend Object.create"),function(t){if(1!==arguments.length)throw new Error("Object.create implementation only accepts one parameter.");return e.prototype=t,new e}}()),$.fn.outerHTML=function(){return this.length?this[0].outerHTML||function(t){var e=document.createElement("div");e.appendChild(t.cloneNode(!0));var i=e.innerHTML;return e=null,alert(i),i}(this[0]):this};var JsonUtility={ParseArrayJsonToTreeJson:function(a,l,t){var e={},i=function(t,e){for(var i=0;i<l.length;i++)if(l[i][t]==e)return l[i];alert("ParseArrayJsonToTreeJson.FindJsonById:在sourceArray中找不到指定Id的记录")}(a.KeyField,t);return function t(e,i){var n=function(t,e){for(var i=[],n=0;n<l.length;n++)l[n][t]==e&&i.push(l[n]);return i}(a.RelationField,e);if(0<n.length){null==i[a.ChildFieldName]&&(i[a.ChildFieldName]=[]);for(var o=0;o<n.length;o++){var r={};r=JsonUtility.SimpleCloneAttr(r,n[o]),i[a.ChildFieldName].push(r),t(r[a.KeyField],r)}}}(t,e=this.SimpleCloneAttr(e,i)),e},ResolveSimpleArrayJsonToTreeJson:function(t,e,i){alert("JsonUtility.ResolveSimpleArrayJsonToTreeJson 已停用")},SimpleCloneAttr:function(t,e){for(var i in e)t[i]=e[i];return t},CloneSimple:function(t){return jQuery.extend(!0,{},t)},JsonToString:function(t){return JSON.stringify(t)},JsonToStringFormat:function(t){return JSON.stringify(t,null,2)},StringToJson:function StringToJson(str){return eval("("+str+")")}},ListPageUtility={GetGeneralPageHeight:function(t){var e=jQuery(document).height();return e=0<$("#list-simple-search-wrap").length?e-$("#list-simple-search-wrap").outerHeight()+t-$("#list-button-wrap").outerHeight()-$("#list-pager-wrap").outerHeight()-30:e-$("#list-button-wrap").outerHeight()+t-$("#list-pager-wrap").outerHeight()-30},GetFixHeight:function(){return-70},IViewTableRenderer:{ToDateYYYY_MM_DD:function(t,e){var i=new Date(e);return t("div",DateUtility.Format(i,"yyyy-MM-dd"))},StringToDateYYYY_MM_DD:function(t,e){return t("div",e.split(" ")[0])},ToStatusEnable:function(t,e){return 0==e?t("div","禁用"):1==e?t("div","启用"):void 0},ToYesNoEnable:function(t,e){return 0==e?t("div","否"):1==e?t("div","是"):void 0},ToDictionaryText:function(t,e,i,n){var o=DictionaryUtility.GroupValueListJsonToSimpleJson(e);return null==n||""==n?t("div",""):null!=o[i]&&o[i]?o[i][n]?t("div",o[i][n]):t("div","找不到装换的TEXT"):t("div","找不到装换的分组")}},IViewTableMareSureSelected:function(e){return null!=e&&0<e.length?{then:function(t){t(e)}}:(DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选中需要操作的行!",null),{then:function(t){}})},IViewTableMareSureSelectedOne:function(e){return null!=e&&0<e.length&&1==e.length?{then:function(t){t(e)}}:(DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选中需要操作的行，每次只能选中一行!",null),{then:function(t){}})},IViewChangeServerStatus:function(t,e,i,n,o){for(var r=new Array,a=0;a<e.length;a++)r.push(e[a][i]);AjaxUtility.Post(t,{ids:r.join(";"),status:n},function(t){t.success?(DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},t.message,function(){}),o.reloadData()):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},t.message,null)},"json")},IViewMoveFace:function(e,t,i,n,o){this.IViewTableMareSureSelectedOne(t).then(function(t){AjaxUtility.Post(e,{recordId:t[0][i],type:n},function(t){t.success?o.reloadData():DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},t.message,null)},"json")})},IViewChangeServerStatusFace:function(e,t,i,n,o){this.IViewTableMareSureSelected(t).then(function(t){ListPageUtility.IViewChangeServerStatus(e,t,i,n,o)})},IViewTableDeleteRow:function(t,e,i){DialogUtility.Confirm(window,"确认要删除当前记录吗？",function(){AjaxUtility.Post(t,{recordId:e},function(t){t.success?DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},t.message,function(){i.reloadData()}):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},t.message,function(){})},"json")})},IViewTableLoadDataSearch:function(t,e,i,n,o,r,a,l,u){null!=u&&null!=u||(u=!1),AjaxUtility.Post(t,{pageNum:e,pageSize:i,searchCondition:SearchUtility.SerializationSearchCondition(n),loadDict:u},function(t){if(t.success){if("function"==typeof l&&l(t,o),o.tableData=new Array,o.tableData=t.data.list,o.pageTotal=t.data.total,a&&null!=o.selectionRows)for(var e=0;e<o.tableData.length;e++)for(var i=0;i<o.selectionRows.length;i++)o.selectionRows[i][r]==o.tableData[e][r]&&(o.tableData[e]._checked=!0)}else DialogUtility.AlertError(window,DialogUtility.DialogAlertId,{},t.message,function(){})},"json")},IViewTableLoadDataNoSearch:function(t,e,i,n,o,r,a){AjaxUtility.Post(t,{pageNum:e,pageSize:i},function(t){if(t.success){if(n.tableData=new Array,n.tableData=t.data.list,n.pageTotal=t.data.total,r&&null!=n.selectionRows)for(var e=0;e<n.tableData.length;e++)for(var i=0;i<n.selectionRows.length;i++)n.selectionRows[i][o]==n.tableData[e][o]&&(n.tableData[e]._checked=!0);"function"==typeof a&&a(t,n)}},"json")},IViewTableInnerButton:{ViewButton:function(t,e,i,n){return t("div",{class:"list-row-button list-row-button-view",on:{click:function(){n.view(e.row[i])}}})},EditButton:function(t,e,i,n){return t("div",{class:"list-row-button list-row-button-edit",on:{click:function(){n.edit(e.row[i])}}})},DeleteButton:function(t,e,i,n){return t("div",{class:"list-row-button list-row-button-del",on:{click:function(){n.del(e.row[i])}}})}}},PageStyleUtility={GetPageHeight:function(){return jQuery(window.document).height()},GetPageWidth:function(){return jQuery(window.document).width()},GetWindowHeight:function(){return $(window).height()},GetWindowWidth:function(){return $(window).width()},GetListButtonOuterHeight:function(){return alert("PageStyleUtility.GetListButtonOuterHeight 已停用"),jQuery(".list-button-outer-c").outerHeight()}},SearchUtility={SearchFieldType:{IntType:"IntType",NumberType:"NumberType",DataType:"DateType",LikeStringType:"LikeStringType",LeftLikeStringType:"LeftLikeStringType",RightLikeStringType:"RightLikeStringType",StringType:"StringType",DataStringType:"DateStringType",ArrayLikeStringType:"ArrayLikeStringType"},SerializationSearchCondition:function(t){var e=JsonUtility.CloneSimple(t);for(var i in e)e[i].type==SearchUtility.SearchFieldType.ArrayLikeStringType&&(null!=e[i].value&&0<e[i].value.length?e[i].value=e[i].value.join(";"):e[i].value="");return JSON.stringify(e)}},JBuild4DSelectView={SelectEnvVariable:{URL:"/PlatForm/SelectView/SelectEnvVariable/Select",beginSelect:function(t){var e=BaseUtility.BuildAction(this.URL,{instanceName:t});DialogUtility.OpenIframeWindow(window,DialogUtility.DialogId,e,{title:"选择变量",modal:!0},2)},beginSelectInFrame:function(t,e,i){var n=BaseUtility.BuildAction(this.URL,{instanceName:e});i=$.extend(!0,{},{modal:!0,title:"选择变量"},i);DialogUtility.Frame_OpenIframeWindow(t,DialogUtility.DialogId05,n,i,1),$(window.parent.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.parent.document).find(".ui-dialog").css("zIndex",10101)},formatText:function(t,e){return"Const"==t?"静态值:【"+e+"】":"DateTime"==t?"日期时间:【"+e+"】":"ApiVar"==t?"API变量:【"+e+"】":"NumberCode"==t?"序号编码:【"+e+"】":"IdCoder"==t?"主键生成:【"+e+"】":""==t?"【无】":"未知类型"+e}},SelectBindToField:{URL:"/PlatForm/SelectView/SelectBindToTableField/Select",beginSelect:function(t){var e=this.URL+"?instanceName="+t;DialogUtility.OpenIframeWindow(window,DialogUtility.DialogId,e,{title:"选择变量",modal:!0},2)},beginSelectInFrame:function(t,e,i){var n=BaseUtility.BuildAction(this.URL,{instanceName:e});i=$.extend(!0,{},{modal:!0,title:"选择绑定字段"},i);DialogUtility.Frame_OpenIframeWindow(t,DialogUtility.DialogId05,n,i,1),$(window.parent.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.parent.document).find(".ui-dialog").css("zIndex",10101)}},SelectValidateRule:{URL:"/PlatForm/SelectView/SelectValidateRule/Select",beginSelect:function(t){var e=this.URL+"?instanceName="+t;DialogUtility.OpenIframeWindow(window,DialogUtility.DialogId,e,{title:"验证规则",modal:!0},2)},beginSelectInFrame:function(t,e,i){var n=BaseUtility.BuildAction(this.URL,{instanceName:e});i=$.extend(!0,{},{modal:!0,title:"验证规则"},i);DialogUtility.Frame_OpenIframeWindow(t,DialogUtility.DialogId05,n,i,1),$(window.parent.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.parent.document).find(".ui-dialog").css("zIndex",10101)}}};function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var StringUtility={GetTimeStampUrl:function(t){alert("迁移到BaseUtility.AppendTimeStampUrl")},GetAllQueryString:function(){alert("StringUtility.GetAllQueryString 已停用")},QueryString:function(t){alert("迁移到BaseUtility.GetUrlParaValue")},QueryStringUrlString:function(t,e){alert("迁移到BaseUtility.GetUrlParaValueByString")},XMLEncode:function(t){alert("StringUtility.XMLEncode 已停用")},XMLDeCode:function(t){alert("StringUtility.XMLDeCode 已停用")},HTMLEncode:function(t){alert("StringUtility.HTMLEncode 已停用")},HTMLDecode:function(t){alert("StringUtility.HTMLDecode 已停用")},Format:function(){alert("StringUtility.HTMLDecode 已停用")},GuidNotSplit:function(){alert("StringUtility.GuidNotSplit 已停用")},GuidSplit:function(t){for(var e="",i=1;i<=32;i++)e+=Math.floor(16*Math.random()).toString(16),8!=i&&12!=i&&16!=i&&20!=i||(e+=t);return e},Guid:function(){return this.GuidSplit("-")},RTimestamp:function(){alert("迁移到StringUtility.Timestamp")},Timestamp:function(){return(new Date).getTime().toString().substr(4,10)},Trim:function(t){return t.replace(/(^[　\s]*)|([　\s]*$)/g,"")},LTrim:function(t){alert("StringUtility.LTrim 已停用")},RTrim:function(t){alert("StringUtility.RTrim 已停用")},TrimLastChar:function(t){return alert("迁移到StringUtility.RemoveLastChar"),t.substring(0,t.length-1)},RemoveLastChar:function(t){return t.substring(0,t.length-1)},StringToJson:function(t){alert("迁移到JsonUtility.StringToJson")},Level1JsonToString:function(t){alert("迁移到JsonUtility.JsonToString")},Level1JsonToStringKeyString:function(t){alert("迁移到JsonUtility.JsonToString")},Level1JsonToStringValueEncode:function(t){alert("迁移到JsonUtility.JsonToString")},Level1StringToJsonValueDecode:function(t){alert("迁移到JsonUtility.JsonToString")},GetBrithdayByIdCard:function(t){alert("StringUtility.GetBrithdayByIdCard 已停用")},GetSexByIdCard:function(t){alert("StringUtility.GetSexByIdCard 已停用")},IsNullOrEmpty:function(t){return null==t||""==t||null==t||"undefined"==t||"null"==t},IsNullOrEmptyObject:function(t){alert("StringUtility.IsNullOrEmptyObject 已停用")},GetFuntionName:function(t){if("function"==typeof t||"object"==_typeof(t))var e=(""+t).match(/function\s*([\w\$]*)\s*\(/);if(null!==e)return e[1]},ToLowerCase:function(t){return t.toLowerCase()},toUpperCase:function(t){return t.toUpperCase()},Padding:function(t,e){alert("StringUtility.Padding 已停用")},EndWith:function(t,e){var i=t.length-e.length;return 0<=i&&t.lastIndexOf(e)==i}},XMLUtility={};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
